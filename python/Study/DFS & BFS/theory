[03] DFS & BFS
자료 :  동빈나 - 이코테 2021

1. 스택 자료구조
    - FILO : 선입 후출
    - 입구와 출구가 동일한 형태. ex) 박스 쌓기
    - list() ┌─ append : 삽입
             └─ pop : 삭제
             * 최상단 원소부터 출력 : stack[::-1]
               최하단 원소부터 출력 : stack

2. 큐 자료구조
    - FIFO : 선입 선출
    - 터널 형태
    - from collections import deque
    - deque() ┌─ append : 삽입
              └─ popleft : 삭제
              * 역순으로 바꾸기 : queue.reverse()

3. 재귀함수 (Recursive Fuction)
    - 자기자신을 다시 호출하는 함수
    - 0!, 1! == 1

    1) 최대 공약수 계산 (유클리드 호제법) _ GCD(Greatest Common Divisor)
        - 두 자여눗 A, B에 대하여(A > B) A를 B로 나눈 나머지를 R이라고 한다.
        - 이때 A와 B의 최대공약수는 B와 R의 최대공약수와 같다.
        ''
        def gcd(a, b):
            if a % b == 0:
                return b
            else:
                return gcd(b, a % b)
        ''

4. DFS _ Depth-First Search
    - 깊이 우선 탐색. 깊은 부분을 우선적으로 탐색
    - 스택 자료구조 (or 재귀함수)를 이용

5. BFS _ Breadth-First Search
    - 너비 우선 탐색. 가까운 노드부터 우선 탐색
        - 가까운 노드 모두 큐에 삽입
    - 큐 자료구조를 이용
    ex) 최단 경로 문제